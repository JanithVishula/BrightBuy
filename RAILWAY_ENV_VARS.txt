╔══════════════════════════════════════════════════════════════════════╗
║                   RAILWAY ENVIRONMENT VARIABLES                      ║
║              Copy these to Railway Backend Service                   ║
╚══════════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────────┐
│ REQUIRED VARIABLES (Set these in Railway Dashboard)                 │
└──────────────────────────────────────────────────────────────────────┘

Variable Name: NODE_ENV
Value: production

Variable Name: PORT
Value: 8080

Variable Name: CORS_ORIGIN
Value: https://brightbuy-production.up.railway.app

Variable Name: JWT_SECRET
Value: [Generate a strong random string, minimum 32 characters]
Example: brightbuy_prod_jwt_2025_super_secret_key_change_this


┌──────────────────────────────────────────────────────────────────────┐
│ DATABASE VARIABLES (Auto-populated when MySQL service is linked)    │
└──────────────────────────────────────────────────────────────────────┘

These should be automatically set by Railway when you link the MySQL service:
- MYSQLHOST
- MYSQLPORT
- MYSQLUSER
- MYSQLPASSWORD
- MYSQLDATABASE


┌──────────────────────────────────────────────────────────────────────┐
│ HOW TO ADD VARIABLES IN RAILWAY                                      │
└──────────────────────────────────────────────────────────────────────┘

1. Go to: https://railway.app/dashboard
2. Open your backend service (gallant-friendship-production)
3. Click "Variables" tab
4. Click "New Variable" button
5. Enter variable name and value
6. Click "Add" for each variable
7. Railway will automatically redeploy


┌──────────────────────────────────────────────────────────────────────┐
│ VERIFICATION COMMANDS                                                │
└──────────────────────────────────────────────────────────────────────┘

# Test if backend is running
curl https://gallant-friendship-production.up.railway.app/

# Test API endpoint
curl https://gallant-friendship-production.up.railway.app/api/products

# Test health check
curl https://gallant-friendship-production.up.railway.app/api/health


┌──────────────────────────────────────────────────────────────────────┐
│ EXPECTED RESULTS                                                     │
└──────────────────────────────────────────────────────────────────────┘

✅ Root endpoint: "BrightBuy Backend API is running!"
✅ Products endpoint: JSON array with product data
✅ Health endpoint: {"status":"ok", "environment":"production", ...}
✅ Frontend: No CORS errors in browser console
✅ Frontend: Products load successfully


┌──────────────────────────────────────────────────────────────────────┐
│ COMMON MISTAKES TO AVOID                                             │
└──────────────────────────────────────────────────────────────────────┘

❌ CORS_ORIGIN with trailing slash
   Wrong: https://brightbuy-production.up.railway.app/
   Right: https://brightbuy-production.up.railway.app

❌ PORT not set to 8080
   Wrong: PORT=5001 or PORT=3000
   Right: PORT=8080

❌ Typos in CORS_ORIGIN
   Must exactly match your frontend domain

❌ Not waiting for Railway to redeploy
   After adding variables, wait 1-2 minutes for deployment


┌──────────────────────────────────────────────────────────────────────┐
│ DEPLOYMENT CHECKLIST                                                 │
└──────────────────────────────────────────────────────────────────────┘

□ Step 1: Set all environment variables in Railway
□ Step 2: Push updated code to Git repository
          git add .
          git commit -m "fix: Add CORS support"
          git push origin dev
□ Step 3: Wait for Railway to deploy (check Deployments tab)
□ Step 4: Verify backend is running (visit root URL)
□ Step 5: Check Railway logs for CORS configuration
□ Step 6: Test frontend - should load without CORS errors
□ Step 7: Clear browser cache if needed (Ctrl+F5)


┌──────────────────────────────────────────────────────────────────────┐
│ SUPPORT                                                              │
└──────────────────────────────────────────────────────────────────────┘

📖 Full Guide: See RAILWAY_CORS_FIX.md
🔍 Debugging: Check Railway logs for detailed error messages
🌐 Frontend: https://brightbuy-production.up.railway.app
🖥️  Backend: https://gallant-friendship-production.up.railway.app


╔══════════════════════════════════════════════════════════════════════╗
║                           QUICK SUMMARY                              ║
╠══════════════════════════════════════════════════════════════════════╣
║ The CORS error occurs because your backend doesn't recognize your   ║
║ frontend's domain as an allowed origin. Setting CORS_ORIGIN         ║
║ environment variable fixes this by explicitly allowing requests     ║
║ from https://brightbuy-production.up.railway.app                    ║
╚══════════════════════════════════════════════════════════════════════╝
